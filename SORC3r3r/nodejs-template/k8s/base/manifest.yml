apiVersion: v1
kind: Service
metadata:
  labels:
    app: nodejs-template-service
  name: nodejs-template-service
spec:
  ports:
  - name: http
    port: 80
    targetPort: 1337
  selector:
    app: nodejs-template
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nodejs-template
  name: nodejs-template
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-template
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nodejs-template
    spec:
      containers:
      - env:
        - name: APP_HOST
          value: 0.0.0.0
        - name: APP_PORT
          value: "1337"
        image: docker.pkg.github.com/sorc3r3r/nodejs-template/nodejs-template:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 1337
          initialDelaySeconds: 10
          periodSeconds: 5
        name: nodejs-template
        readinessProbe:
          httpGet:
            path: /healthz
            port: 1337
          initialDelaySeconds: 15
          periodSeconds: 10
      imagePullSecrets:
      - name: githubdockercred
      restartPolicy: Always
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: nodejs-template-ingress
